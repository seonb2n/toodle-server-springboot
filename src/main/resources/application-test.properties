spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.type.descriptor.sql=trace
spring.jpa.hibernate.ddl-auto=create
spring.batch.jdbc.initialize-schema=always
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true

# JAVA MAIL SENDER ??
spring.mail.host=smtp.naver.com
spring.mail.port=465
spring.mail.username=TEST_USERNAME@naver.com
spring.mail.password=TEST_PASSWORD
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.ssl.enable=true

# Redis ?? ??
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.password=
spring.data.redis.repositories.enabled=false
# ?? ??
spring.session.store-type=redis
# redis ?? ?? ? ??
spring.session.redis.namespace=toodle-sessions

## local react
react.ip=http://localhost:3000

#naver login
# registration
spring.security.oauth2.client.registration.naver.client-id=[CLIENT_ID]
spring.security.oauth2.client.registration.naver.client-secret=[CLIENT_SECRET]
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=nickname,email,gender,age
spring.security.oauth2.client.registration.naver.client-name=Naver
# provider
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response
